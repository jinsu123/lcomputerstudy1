<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lcomputerstudy1.example.mapper.UserMapper">
 

	
	<resultMap type="User" id="UserResultMap">
		<result column="u_idx" property="uIdx"/>
		<result column="u_id" property="username"/>
		<result column="u_name" property="uName"/>
		<collection  property="authorities" resultMap="authMap"/>
	</resultMap>

	<resultMap type="org.springframework.security.core.authority.SimpleGrantedAuthority" id="authMap">
		<constructor>
			<arg column="u_auth" javaType="String"/>
		</constructor>
 	</resultMap>
 
 
 <!-- 권한 읽기 -->
    <select id="readAuthorities" parameterType="String" resultType="org.springframework.security.core.authority.SimpleGrantedAuthority">
       SELECT         u_auth
       FROM         lc_auth
       WHERE          1=1
       AND            u_id = #{username}
    </select>


	<!-- 회원수  -->
	<select id="userCount" resultType="int">
    	 SELECT			 COUNT(*) count 
    	 FROM 				lc_user
	</select> 


   <!-- 회원 불러오기 -->
   <select id="readUser" parameterType="String" resultType="User">
      SELECT         		 u_idx										as uIdx,
      						 u_id                 						as  username,
			                 u_password             					as password,
			                 u_name                						as   uName,
			                 u_isAccountNonExpired        as isAccountNonExpired,
			                 u_isAccountNonLocked    	    as isAccountNonLocked,
			                 u_isCredentialNonExpired    as isCredentialsNonExpired,
			                 u_isEnabled          				    as isEnabled
      FROM         lc_user
      WHERE         1=1
      AND            u_id   =   #{username}
   </select>
   
   <!-- 회원 등록 -->
   <insert id="createUser" parameterType="User">
      INSERT INTO lc_user (
    
         u_id,
         u_password,
         u_name,
         u_isAccountNonExpired,
         u_isAccountNonLocked,
         u_isCredentialNonExpired,
         u_isEnabled
      ) VALUES (
      
         #{username},
         #{password},
         #{uName},
         #{isAccountNonExpired},
         #{isAccountNonLocked},
         #{isCredentialsNonExpired},
         #{isEnabled}
      )
      
       	<selectKey keyProperty="uIdx" resultType="int" order="AFTER">
	    		SELECT LAST_INSERT_ID()
	  	</selectKey>
	  	
   </insert>   
   
    <!-- 유저 권한 추가 -->
    <insert id="createAuthority" parameterType="org.springframework.security.core.GrantedAuthority">
       INSERT INTO lc_auth (
          u_id,
          u_auth,
          u_idx
       ) VALUES
         <foreach item="authority" index="index" collection="authorities" separator=",">
            (#{username}, #{authority.role}, #{uIdx})
         </foreach>
         ON DUPLICATE KEY
         UPDATE
            u_id = #{username}
    </insert>
    
    <!-- 회원 리스트  -->
	<select id="selectUserList" parameterType="User" resultType="User" >
	  	      
		SELECT       	         @ROWNUM := @ROWNUM -1 AS ROWNUM,
	                     		 ta.u_idx as uIdx, ta.u_id as username, ta.u_name as uName, tb.u_auth, tb.u_id
	                     		 
		FROM	                 lc_user ta
		LEFT JOIN 				 lc_auth tb ON ta.u_id = tb.u_id
	    INNER JOIN       		 (SELECT @rownum := (SELECT COUNT(*)-#{pageNum}+1 FROM lc_user tb)) tc on 1=1

		ORDER BY				 ta.u_idx desc
		LIMIT	          		 #{pageNum},5

	   </select>
    
</mapper>
